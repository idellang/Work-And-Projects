CREATE TABLE gps_data
(
    gps_received timestamp with time zone NOT NULL
  , geom geometry(point,4326)
);

-- inserting data
INSERT INTO gps_data(gps_received, geom)
SELECT 
	gps_received,
	ST_TRANSFORM(ST_SETSRID(ST_POINT(lon, lat), 4326), 4326) AS geom
FROM gps_staging


--SChools in quirino
SELECT 
	g.name, 
	g.fclass, 
	g.geom
FROM
	gis_osm AS g
JOIN
	provinces p
ON ST_INTERSECTS(g.geom, p.geom)
WHERE 
	(g.fclass = 'school'
OR
	g.fclass = 'college')
AND
	p.province = 'Quirino'
	
-- make line from points	
SELECT 
	DATE_TRUNC('day', gps_received) AS gps_day,
	MIN(gps_received) AS time_start,
	MAX(gps_received) AS time_end,
	ST_MAKELINE(geom ORDER BY gps_received) AS geom,
	COUNT(gps_received) AS num_gps_records
FROM
	gps_data
GROUP BY gps_day
	
	
--distance covered by day
SELECT 
	CAST(gps_day AS timestamp),
	CAST(time_start AS timestamp) AS timestart,
	CAST(time_end AS timestamp) AS time_end,
	ST_NPOINTS(geom) AS num_points,
	CAST(ST_LENGTH(geom::geography) AS integer) AS dist_m
FROM(
	SELECT 
		DATE_TRUNC('day', gps_received) AS gps_day,
		MIN(gps_received) AS time_start,
		MAX(gps_received) AS time_end,
		ST_MAKELINE(geom ORDER BY gps_received) AS geom,
		COUNT(gps_received) AS num_gps_records
	FROM
		gps_data
	GROUP BY 
		gps_day
) AS travel_data

--geofences passed by
SELECT g.geom
FROM
	geofences AS g
JOIN (
	SELECT 
		DATE_TRUNC('day', gps_received) AS gps_day,
		MIN(gps_received) AS time_start,
		MAX(gps_received) AS time_end,
		ST_MAKELINE(geom ORDER BY gps_received) AS geom,
		COUNT(gps_received) AS num_gps_records
	FROM
		gps_data
	GROUP BY 
		gps_day	
) AS t
ON ST_INTERSECTS(t.geom, g.geom)



	