-- Check hualers that are connected to San Miguel Corporation
MATCH path = ((h:Hauler)-[*]->()-[*]->(c:Conglomerate))
WHERE c.name = 'San Miguel Corporation'
RETURN path

-- any nodes that are two paths away from EEI
MATCH path = (()-[*1..2]->(c:Company)<-[*1..2]-())
WHERE c.name = 'EEI'
RETURN path

--4 connections away from F2 Logistics
MATCH path = ((h:Hauler)-[*1..4]->())
WHERE h.name CONTAINS 'F2'
RETURN path

--haulers of URC
MATCH(h:Hauler)-[:HAULS_FOR]->(c:Company)
WHERE c.name CONTAINS 'Universal Robina'
RETURN h, c

-- hauls for URC and huals for other companies
MATCH  (c1:Company)<-[*1]-(h:Hauler)-[:HAULS_FOR]->(c2:Company)
WHERE c2.name CONTAINS 'Universal Robina'
RETURN h, c2, c1

--hauls for other companies that are subsidiary of a conglomerate
MATCH  (c1:Company)<-[*1]-(h:Hauler)-[:HAULS_FOR]->(c2:Company)
WHERE c2.name CONTAINS 'Universal Robina' AND
(c1)-[:SUBSIDIARY_OF]->(:Conglomerate)
RETURN h, c2, c1

--hauler hauls for URC but and hauls for other company that is not a subsidiary
MATCH (c2:Company)<-[:HAULS_FOR]-(h:Hauler)-[:HAULS_FOR]->(c1:Company)
WHERE 
	c1.name CONTAINS 'Universal Robina'
AND NOT
	(c2)-[:SUBSIDIARY_OF]->(:Conglomerate)
RETURN h,c1,c2

--most number of clients
MATCH(h:Hauler)-[:HAULS_FOR]->(c:Company)
WITH h.name AS name, COLLECT(c.name) AS hauler_clients, SIZE(COLLECT(c.name)) AS client_size
RETURN name,client_size ,  hauler_clients
ORDER BY client_size DESC

--number of subsidiaries
MATCH(c:Company)-[:SUBSIDIARY_OF]->(co:Conglomerate)
WITH co.name AS conglomerate, collect(c.name) AS subsidiaries, size(collect(c.name)) AS subsidiary_size 
RETURN conglomerate, subsidiaries
ORDER BY subsidiary_size DESC
LIMIT 5

--company which is not under a subsidiary and its haulers
MATCH(c:Company), (h:Hauler)
WHERE NOT 
	(c)-[:SUBSIDIARY_OF]->(:Conglomerate) 
AND 
	(h)-[:HAULS_FOR]->(c)
RETURN c, h

--node that contains SM
MATCH(node)
WHERE TOLOWER(node.name) CONTAINS 'sm'
RETURN node